---
import type { Polymorphic } from 'astro/types';

export type ButtonVariant = 'primary' | 'secondary' | 'outline';

type Props<Tag extends 'a' | 'button'> = Polymorphic<{
  as: Tag;
  variant: ButtonVariant;
  class?: string;
}>;

const { as: Tag = 'button', variant, class: className, ...props } = Astro.props;

export const getButtonClassString = (variant: ButtonVariant) => {
  const baseClasses =
    'inline-block rounded-md px-4 py-2 font-semibold shadow-sm';

  if (variant === 'primary')
    return baseClasses + ' bg-purple-700 hover:bg-purple-500 text-light';
  else if (variant === 'secondary')
    return baseClasses + ' bg-indigo-700 hover:bg-indigo-500 text-light';
  else if (variant === 'outline')
    return (
      baseClasses +
      ' hover:bg-neutral-300 text-dark ring-2 ring-inset ring-black dark:hover:bg-neutral-700 dark:ring-white dark:text-light'
    );
  else return baseClasses;
};
---

<Tag
  class:list={[getButtonClassString(variant), className]}
  {...props}
  data-component-button
>
  <slot />
</Tag>
